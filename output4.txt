DECLARE  declare  1
MODULE  module  1
ID  readArr  1
SEMICOL  ;  1
DEF  <<  3
MODULE  module  3
ID  arraySum  3
ENDDEF  >>  3
TAKES  takes  4
INPUT  input  4
SQBO  [  4
ID  list  4
COLON  :  4
ARRAY  array  4
SQBO  [  4
NUM  1  4
RANGEOP  ..  4
NUM  15  4
SQBC  ]  4
OF  of  4
REAL  real  4
COMMA  ,  4
ID  n  4
COLON  :  4
INTEGER  integer  4
SQBC  ]  4
SEMICOL  ;  4
RETURNS  returns  5
SQBO  [  5
ID  sum  5
COLON  :  5
REAL  real  5
SQBC  ]  5
SEMICOL  ;  5
START  start  6
DECLARE  declare  7
ID  index  7
COLON  :  7
INTEGER  integer  7
SEMICOL  ;  7
DECLARE  declare  8
ID  t  8
COLON  :  8
BOOLEAN  boolean  8
SEMICOL  ;  8
ID  sum  9
ASSIGNOP  :=  9
RNUM  0.0  9
SEMICOL  ;  9
FOR  for  10
BO  (  10
ID  index  10
IN  in  10
NUM  1  10
RANGEOP  ..  10
NUM  15  10
BC  )  10
START  start  11
ID  t  12
ASSIGNOP  :=  12
ID  index  12
LE  <=  12
ID  n  12
SEMICOL  ;  12
SWITCH  switch  13
BO  (  13
ID  t  13
BC  )  13
START  start  14
CASE  case  15
TRUE  true  15
COLON  :  15
PRINT  print  15
BO  (  15
ID  list  15
SQBO  [  15
ID  index  15
SQBC  ]  15
BC  )  15
SEMICOL  ;  15
ID  sum  16
ASSIGNOP  :=  16
ID  sum  16
PLUS  +  16
ID  list  16
SQBO  [  16
ID  index  16
SQBC  ]  16
SEMICOL  ;  16
BREAK  break  17
SEMICOL  ;  17
CASE  case  18
FALSE  false  18
COLON  :  18
PRINT  print  18
BO  (  18
ID  sum  18
BC  )  18
SEMICOL  ;  18
PRINT  print  19
BO  (  19
ID  index  19
BC  )  19
SEMICOL  ;  19
BREAK  break  21
SEMICOL  ;  21
END  end  22
END  end  24
PRINT  print  25
BO  (  25
ID  sum  25
BC  )  25
SEMICOL  ;  25
END  end  26
DRIVERDEF  <<<  27
DRIVER  driver  27
PROGRAM  program  27
DRIVERENDDEF  >>>  27
START  start  28
DECLARE  declare  29
ID  A  29
COLON  :  29
ARRAY  array  29
SQBO  [  29
NUM  1  29
RANGEOP  ..  29
NUM  15  29
SQBC  ]  29
OF  of  29
REAL  real  29
SEMICOL  ;  29
DECLARE  declare  30
ID  k  30
COLON  :  30
INTEGER  integer  30
SEMICOL  ;  30
DECLARE  declare  31
ID  s  31
COLON  :  31
REAL  real  31
SEMICOL  ;  31
GET_VALUE  get_value  32
BO  (  32
ID  k  32
BC  )  32
SEMICOL  ;  32
USE  use  33
MODULE  module  33
ID  readArr  33
WITH  with  33
PARAMETERS  parameters  33
ID  A  33
COMMA  ,  33
ID  k  33
SEMICOL  ;  33
SQBO  [  34
ID  s  34
SQBC  ]  34
ASSIGNOP  :=  34
USE  use  34
MODULE  module  34
ID  arraySum  34
WITH  with  34
PARAMETERS  parameters  34
ID  A  34
COMMA  ,  34
ID  k  34
SEMICOL  ;  34
PRINT  print  35
BO  (  35
ID  s  35
BC  )  35
SEMICOL  ;  35
END  end  36
DEF  <<  43
MODULE  module  43
ID  readArr  43
ENDDEF  >>  43
TAKES  takes  44
INPUT  input  44
SQBO  [  44
ID  arr1  44
COLON  :  44
ARRAY  array  44
SQBO  [  44
NUM  1  44
RANGEOP  ..  44
NUM  15  44
SQBC  ]  44
OF  of  44
REAL  real  44
COMMA  ,  44
ID  k  44
COLON  :  44
INTEGER  integer  44
SQBC  ]  44
SEMICOL  ;  44
START  start  45
DECLARE  declare  46
ID  tempvar  46
COLON  :  46
REAL  real  46
SEMICOL  ;  46
DECLARE  declare  47
ID  i  47
COLON  :  47
INTEGER  integer  47
SEMICOL  ;  47
ID  i  48
ASSIGNOP  :=  48
NUM  1  48
SEMICOL  ;  48
WHILE  while  49
BO  (  49
ID  i  49
LE  <=  49
ID  k  49
BC  )  49
START  start  50
GET_VALUE  get_value  51
BO  (  51
ID  tempvar  51
BC  )  51
SEMICOL  ;  51
ID  arr1  52
SQBO  [  52
ID  i  52
SQBC  ]  52
ASSIGNOP  :=  52
ID  tempvar  52
SEMICOL  ;  52
ID  i  53
ASSIGNOP  :=  53
ID  i  53
PLUS  +  53
NUM  1  53
SEMICOL  ;  53
END  end  55
END  end  56
END OF CLEAN FILE